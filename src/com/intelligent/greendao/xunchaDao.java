package com.intelligent.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table XUNCHA.
*/
public class xunchaDao extends AbstractDao<xuncha, Long> {

    public static final String TABLENAME = "XUNCHA";

    /**
     * Properties of entity xuncha.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Xunchaid = new Property(0, Long.class, "xunchaid", true, "XUNCHAID");
        public final static Property Xuncharenyuan = new Property(1, String.class, "xuncharenyuan", false, "XUNCHARENYUAN");
        public final static Property Xunchariqi = new Property(2, String.class, "xunchariqi", false, "XUNCHARIQI");
        public final static Property Xunchaqingkuang = new Property(3, String.class, "xunchaqingkuang", false, "XUNCHAQINGKUANG");
        public final static Property Chuliqingkuang = new Property(4, String.class, "chuliqingkuang", false, "CHULIQINGKUANG");
        public final static Property Jingdu = new Property(5, String.class, "jingdu", false, "JINGDU");
        public final static Property Weidu = new Property(6, String.class, "weidu", false, "WEIDU");
        public final static Property Xunchabiaoqianid = new Property(7, String.class, "xunchabiaoqianid", false, "XUNCHABIAOQIANID");
        public final static Property Zhaopianurl = new Property(8, String.class, "zhaopianurl", false, "ZHAOPIANURL");
    };


    public xunchaDao(DaoConfig config) {
        super(config);
    }
    
    public xunchaDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'XUNCHA' (" + //
                "'XUNCHAID' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: xunchaid
                "'XUNCHARENYUAN' TEXT," + // 1: xuncharenyuan
                "'XUNCHARIQI' TEXT," + // 2: xunchariqi
                "'XUNCHAQINGKUANG' TEXT," + // 3: xunchaqingkuang
                "'CHULIQINGKUANG' TEXT," + // 4: chuliqingkuang
                "'JINGDU' TEXT," + // 5: jingdu
                "'WEIDU' TEXT," + // 6: weidu
                "'XUNCHABIAOQIANID' TEXT," + // 7: xunchabiaoqianid
                "'ZHAOPIANURL' TEXT);"); // 8: zhaopianurl
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'XUNCHA'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, xuncha entity) {
        stmt.clearBindings();
 
        Long xunchaid = entity.getXunchaid();
        if (xunchaid != null) {
            stmt.bindLong(1, xunchaid);
        }
 
        String xuncharenyuan = entity.getXuncharenyuan();
        if (xuncharenyuan != null) {
            stmt.bindString(2, xuncharenyuan);
        }
 
        String xunchariqi = entity.getXunchariqi();
        if (xunchariqi != null) {
            stmt.bindString(3, xunchariqi);
        }
 
        String xunchaqingkuang = entity.getXunchaqingkuang();
        if (xunchaqingkuang != null) {
            stmt.bindString(4, xunchaqingkuang);
        }
 
        String chuliqingkuang = entity.getChuliqingkuang();
        if (chuliqingkuang != null) {
            stmt.bindString(5, chuliqingkuang);
        }
 
        String jingdu = entity.getJingdu();
        if (jingdu != null) {
            stmt.bindString(6, jingdu);
        }
 
        String weidu = entity.getWeidu();
        if (weidu != null) {
            stmt.bindString(7, weidu);
        }
 
        String xunchabiaoqianid = entity.getXunchabiaoqianid();
        if (xunchabiaoqianid != null) {
            stmt.bindString(8, xunchabiaoqianid);
        }
 
        String zhaopianurl = entity.getZhaopianurl();
        if (zhaopianurl != null) {
            stmt.bindString(9, zhaopianurl);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public xuncha readEntity(Cursor cursor, int offset) {
        xuncha entity = new xuncha( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // xunchaid
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // xuncharenyuan
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // xunchariqi
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // xunchaqingkuang
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // chuliqingkuang
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // jingdu
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // weidu
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // xunchabiaoqianid
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8) // zhaopianurl
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, xuncha entity, int offset) {
        entity.setXunchaid(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setXuncharenyuan(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setXunchariqi(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setXunchaqingkuang(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setChuliqingkuang(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setJingdu(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setWeidu(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setXunchabiaoqianid(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setZhaopianurl(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(xuncha entity, long rowId) {
        entity.setXunchaid(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(xuncha entity) {
        if(entity != null) {
            return entity.getXunchaid();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
