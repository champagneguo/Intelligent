package com.intelligent.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table GUZHANGSHENBAO.
*/
public class guzhangshenbaoDao extends AbstractDao<guzhangshenbao, Long> {

    public static final String TABLENAME = "GUZHANGSHENBAO";

    /**
     * Properties of entity guzhangshenbao.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Shenbaoid = new Property(0, Long.class, "shenbaoid", true, "SHENBAOID");
        public final static Property Shenbaorenyuan = new Property(1, String.class, "shenbaorenyuan", false, "SHENBAORENYUAN");
        public final static Property Shenbaoriqi = new Property(2, String.class, "shenbaoriqi", false, "SHENBAORIQI");
        public final static Property Guzhangleixing = new Property(3, String.class, "guzhangleixing", false, "GUZHANGLEIXING");
        public final static Property Guzhangshuoming = new Property(4, String.class, "guzhangshuoming", false, "GUZHANGSHUOMING");
        public final static Property Jingdu = new Property(5, String.class, "jingdu", false, "JINGDU");
        public final static Property Weidu = new Property(6, String.class, "weidu", false, "WEIDU");
        public final static Property Shenbaobiaoqianid = new Property(7, String.class, "shenbaobiaoqianid", false, "SHENBAOBIAOQIANID");
        public final static Property Zhaopianurl = new Property(8, String.class, "zhaopianurl", false, "ZHAOPIANURL");
    };


    public guzhangshenbaoDao(DaoConfig config) {
        super(config);
    }
    
    public guzhangshenbaoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'GUZHANGSHENBAO' (" + //
                "'SHENBAOID' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: shenbaoid
                "'SHENBAORENYUAN' TEXT," + // 1: shenbaorenyuan
                "'SHENBAORIQI' TEXT," + // 2: shenbaoriqi
                "'GUZHANGLEIXING' TEXT," + // 3: guzhangleixing
                "'GUZHANGSHUOMING' TEXT," + // 4: guzhangshuoming
                "'JINGDU' TEXT," + // 5: jingdu
                "'WEIDU' TEXT," + // 6: weidu
                "'SHENBAOBIAOQIANID' TEXT," + // 7: shenbaobiaoqianid
                "'ZHAOPIANURL' TEXT);"); // 8: zhaopianurl
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'GUZHANGSHENBAO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, guzhangshenbao entity) {
        stmt.clearBindings();
 
        Long shenbaoid = entity.getShenbaoid();
        if (shenbaoid != null) {
            stmt.bindLong(1, shenbaoid);
        }
 
        String shenbaorenyuan = entity.getShenbaorenyuan();
        if (shenbaorenyuan != null) {
            stmt.bindString(2, shenbaorenyuan);
        }
 
        String shenbaoriqi = entity.getShenbaoriqi();
        if (shenbaoriqi != null) {
            stmt.bindString(3, shenbaoriqi);
        }
 
        String guzhangleixing = entity.getGuzhangleixing();
        if (guzhangleixing != null) {
            stmt.bindString(4, guzhangleixing);
        }
 
        String guzhangshuoming = entity.getGuzhangshuoming();
        if (guzhangshuoming != null) {
            stmt.bindString(5, guzhangshuoming);
        }
 
        String jingdu = entity.getJingdu();
        if (jingdu != null) {
            stmt.bindString(6, jingdu);
        }
 
        String weidu = entity.getWeidu();
        if (weidu != null) {
            stmt.bindString(7, weidu);
        }
 
        String shenbaobiaoqianid = entity.getShenbaobiaoqianid();
        if (shenbaobiaoqianid != null) {
            stmt.bindString(8, shenbaobiaoqianid);
        }
 
        String zhaopianurl = entity.getZhaopianurl();
        if (zhaopianurl != null) {
            stmt.bindString(9, zhaopianurl);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public guzhangshenbao readEntity(Cursor cursor, int offset) {
        guzhangshenbao entity = new guzhangshenbao( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // shenbaoid
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // shenbaorenyuan
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // shenbaoriqi
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // guzhangleixing
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // guzhangshuoming
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // jingdu
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // weidu
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // shenbaobiaoqianid
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8) // zhaopianurl
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, guzhangshenbao entity, int offset) {
        entity.setShenbaoid(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setShenbaorenyuan(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setShenbaoriqi(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGuzhangleixing(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGuzhangshuoming(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setJingdu(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setWeidu(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setShenbaobiaoqianid(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setZhaopianurl(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(guzhangshenbao entity, long rowId) {
        entity.setShenbaoid(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(guzhangshenbao entity) {
        if(entity != null) {
            return entity.getShenbaoid();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
