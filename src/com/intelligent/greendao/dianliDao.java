package com.intelligent.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.intelligent.greendao.dianli;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table DIANLI.
*/
public class dianliDao extends AbstractDao<dianli, Long> {

    public static final String TABLENAME = "DIANLI";

    /**
     * Properties of entity dianli.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Dianlicode = new Property(0, Long.class, "dianlicode", true, "DIANLICODE");
        public final static Property Zhanming = new Property(1, String.class, "zhanming", false, "ZHANMING");
        public final static Property Luming = new Property(2, String.class, "luming", false, "LUMING");
        public final static Property Tiaoxuhao = new Property(3, String.class, "tiaoxuhao", false, "TIAOXUHAO");
        public final static Property Changdu = new Property(4, String.class, "changdu", false, "CHANGDU");
        public final static Property Qidian = new Property(5, String.class, "qidian", false, "QIDIAN");
        public final static Property Zhongdian = new Property(6, String.class, "zhongdian", false, "ZHONGDIAN");
        public final static Property Xinghao = new Property(7, String.class, "xinghao", false, "XINGHAO");
        public final static Property Fadianshijian = new Property(8, String.class, "fadianshijian", false, "FADIANSHIJIAN");
        public final static Property Jingdu = new Property(9, String.class, "jingdu", false, "JINGDU");
        public final static Property Weidu = new Property(10, String.class, "weidu", false, "WEIDU");
        public final static Property Biaoqiancode = new Property(11, String.class, "biaoqiancode", false, "BIAOQIANCODE");
        public final static Property Bangdingshijian = new Property(12, String.class, "bangdingshijian", false, "BANGDINGSHIJIAN");
        public final static Property Beizhu = new Property(13, String.class, "beizhu", false, "BEIZHU");
    };


    public dianliDao(DaoConfig config) {
        super(config);
    }
    
    public dianliDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'DIANLI' (" + //
                "'DIANLICODE' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: dianlicode
                "'ZHANMING' TEXT," + // 1: zhanming
                "'LUMING' TEXT," + // 2: luming
                "'TIAOXUHAO' TEXT," + // 3: tiaoxuhao
                "'CHANGDU' TEXT," + // 4: changdu
                "'QIDIAN' TEXT," + // 5: qidian
                "'ZHONGDIAN' TEXT," + // 6: zhongdian
                "'XINGHAO' TEXT," + // 7: xinghao
                "'FADIANSHIJIAN' TEXT," + // 8: fadianshijian
                "'JINGDU' TEXT," + // 9: jingdu
                "'WEIDU' TEXT," + // 10: weidu
                "'BIAOQIANCODE' TEXT," + // 11: biaoqiancode
                "'BANGDINGSHIJIAN' TEXT," + // 12: bangdingshijian
                "'BEIZHU' TEXT);"); // 13: beizhu
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'DIANLI'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, dianli entity) {
        stmt.clearBindings();
 
        Long dianlicode = entity.getDianlicode();
        if (dianlicode != null) {
            stmt.bindLong(1, dianlicode);
        }
 
        String zhanming = entity.getZhanming();
        if (zhanming != null) {
            stmt.bindString(2, zhanming);
        }
 
        String luming = entity.getLuming();
        if (luming != null) {
            stmt.bindString(3, luming);
        }
 
        String tiaoxuhao = entity.getTiaoxuhao();
        if (tiaoxuhao != null) {
            stmt.bindString(4, tiaoxuhao);
        }
 
        String changdu = entity.getChangdu();
        if (changdu != null) {
            stmt.bindString(5, changdu);
        }
 
        String qidian = entity.getQidian();
        if (qidian != null) {
            stmt.bindString(6, qidian);
        }
 
        String zhongdian = entity.getZhongdian();
        if (zhongdian != null) {
            stmt.bindString(7, zhongdian);
        }
 
        String xinghao = entity.getXinghao();
        if (xinghao != null) {
            stmt.bindString(8, xinghao);
        }
 
        String fadianshijian = entity.getFadianshijian();
        if (fadianshijian != null) {
            stmt.bindString(9, fadianshijian);
        }
 
        String jingdu = entity.getJingdu();
        if (jingdu != null) {
            stmt.bindString(10, jingdu);
        }
 
        String weidu = entity.getWeidu();
        if (weidu != null) {
            stmt.bindString(11, weidu);
        }
 
        String biaoqiancode = entity.getBiaoqiancode();
        if (biaoqiancode != null) {
            stmt.bindString(12, biaoqiancode);
        }
 
        String bangdingshijian = entity.getBangdingshijian();
        if (bangdingshijian != null) {
            stmt.bindString(13, bangdingshijian);
        }
 
        String beizhu = entity.getBeizhu();
        if (beizhu != null) {
            stmt.bindString(14, beizhu);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public dianli readEntity(Cursor cursor, int offset) {
        dianli entity = new dianli( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // dianlicode
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // zhanming
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // luming
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // tiaoxuhao
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // changdu
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // qidian
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // zhongdian
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // xinghao
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // fadianshijian
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // jingdu
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // weidu
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // biaoqiancode
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // bangdingshijian
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13) // beizhu
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, dianli entity, int offset) {
        entity.setDianlicode(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setZhanming(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setLuming(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTiaoxuhao(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setChangdu(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setQidian(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setZhongdian(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setXinghao(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFadianshijian(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setJingdu(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setWeidu(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setBiaoqiancode(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setBangdingshijian(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setBeizhu(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(dianli entity, long rowId) {
        entity.setDianlicode(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(dianli entity) {
        if(entity != null) {
            return entity.getDianlicode();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
